
@{
    ViewBag.Title = "Project + Version results";
}
@model Statan.Web.Models.ProjectVersionViewModel

<script>
    var myNewChart;
    var banditChart;

    function loadResults() {
        var project = Project.value;
        var version = Version.value;

        $.ajax({
            type: "POST",
            url: "/ProjectVersion/NewChart?project=" + project + "&version=" + version,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (chData) {
                var aData = chData;
                var aLabels = aData[0];
                var aDatasets1 = aData[1];
                var dataT = {
                    labels: aLabels,
                    datasets: [{
                        label: "Count",
                        data: aDatasets1,
                        fill: false,
                        backgroundColor: ["rgba(54, 162, 235, 0.2)", "rgba(255, 99, 132, 0.2)", "rgba(255, 159, 64, 0.2)", "rgba(255, 205, 86, 0.2)", "rgba(75, 192, 192, 0.2)", "rgba(153, 102, 255, 0.2)", "rgba(201, 203, 207, 0.2)"],
                        borderColor: ["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
                        borderWidth: 1
                    }]
                };

                if (myNewChart != null) {
                    myNewChart.destroy();
                }

                $("#header").show()
                var ctx = $("#myChart").get(0).getContext("2d");

                myNewChart = new Chart(ctx, {
                    type: 'horizontalBar',
                    data: dataT,
                    options: {
                        responsive: true,
                        title: { display: false, text: '' },
                        legend: { display: false, position: 'bottom' },
                        scales: {
                            xAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: true, labelString: 'Messages' } }],
                            yAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: false, labelString: '' }, ticks: { stepSize: 50, beginAtZero: true } }]
                        },
                    }
                });
            }
        });

        $.ajax({
            type: "POST",
            url: "/ProjectVersion/BanditChart?project=" + project + "&version=" + version,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (chData) {
                var aData = chData;
                var aLabels = aData[0];
                var aDatasets1 = aData[1];
                var dataT = {
                    labels: aLabels,
                    datasets: [{
                        label: "Count",
                        data: aDatasets1,
                        fill: false,
                        backgroundColor: ["rgba(54, 162, 235, 0.2)", "rgba(255, 99, 132, 0.2)", "rgba(255, 159, 64, 0.2)", "rgba(255, 205, 86, 0.2)", "rgba(75, 192, 192, 0.2)", "rgba(153, 102, 255, 0.2)", "rgba(201, 203, 207, 0.2)"],
                        borderColor: ["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
                        borderWidth: 1
                    }]
                };

                if (banditChart != null) {
                    banditChart.destroy();
                }

                $("#banditHeader").show()
                var ctx = $("#banditChart").get(0).getContext("2d");

                banditChart = new Chart(ctx, {
                    type: 'bar',
                    data: dataT,
                    options: {
                        events: false,
                        tooltips: {
                            enabled: false
                        },
                        hover: {
                            animationDuration: 0
                        },
                        animation: {
                            duration: 1,
                            onComplete: function () {
                                var chartInstance = this.chart,
                                    ctx = chartInstance.ctx;
                                ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, Chart.defaults.global.defaultFontStyle, Chart.defaults.global.defaultFontFamily);
                                ctx.textAlign = 'center';
                                ctx.textBaseline = 'bottom';

                                this.data.datasets.forEach(function (dataset, i) {
                                    var meta = chartInstance.controller.getDatasetMeta(i);
                                    meta.data.forEach(function (bar, index) {
                                        var data = dataset.data[index];
                                        ctx.fillText(data, bar._model.x, bar._model.y - 5);
                                    });
                                });
                            }
                        },
                        responsive: true,
                        title: { display: false, text: '' },
                        legend: { display: false, position: 'bottom' },
                        scales: {
                            xAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: true, labelString: 'Messages' } }],
                            yAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: false, labelString: '' }, ticks: { stepSize: 50, beginAtZero: true } }]
                        },
                    }
                });
            }
        });
    }

    $(function () {
        $("#Project").change(function () {
            var val = $(this).val();
            var subItems="";
            $.getJSON("@Url.Action("GetProjectVersions", "ProjectVersion")", {projectName:val} ,function (data) {
              $.each(data,function(index,item){
                subItems+="<option value='"+item.Value+"'>"+item.Text+"</option>"
              });
              $("#Version").html(subItems)
            });
        });
    });
</script>

<div>
    @using (Html.BeginForm())
    {
        <span>
            @Html.DropDownListFor(x => x.Project, new SelectList(Model.Projects, "Value", "Text"), "Project: ")
        </span>
        <span>
            @Html.DropDownListFor(x => x.Version, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"), "Version: ")
        </span>
        <span>
            <button type="button" onclick="loadResults(Project.Value, Version.Value)">View</button>
        </span>
    }
</div>
<div>
    <div style="display:none"
         class="text-center font-weight-bold"
         id="header">
        Results of specified project and version
    </div>
</div>
<div Style="font-family: Corbel; font-size: small ;text-align:center " class="row">
    <div style="width:100%;height:100%">
        <canvas id="myChart" style="padding: 0;margin: auto;display: block; "> </canvas>
    </div>
</div>

<div style="display:none"
     class="text-center font-weight-bold mt-5"
     id="banditHeader">
    Bandit results of specified project and version
</div>
<div Style="font-family: Corbel; font-size: small ;text-align:center " class="row">
    <div style="width:100%;height:100%">
        <canvas id="banditChart" style="padding: 0;margin: auto;display: block; "> </canvas>
    </div>
</div>
